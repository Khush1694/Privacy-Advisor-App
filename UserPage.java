/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package privacysecurity;

import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author user
 */
public class UserPage extends javax.swing.JFrame {
 Connection con;
 PreparedStatement pst,pst1,pst1_2,pst2,pst2_2,pst3,pst3_2,pst4,pst4_2,pst5,pst5_2,pst6,pst6_2;
 ResultSet rs,rs1,rs1_2,rs2,rs2_2,rs3,rs3_2,rs4,rs4_2,rs5,rs5_2,rs6,rs6_2;

 
      int mousepX ;
        int mousepY ;
    public UserPage() {
        initComponents();
        setIconImage();
       
    }
    void user(String username)
    {
        jLabel8.setText(username);
    }
    void userna(String ka)
    {
        jLabel8.setText(ka);
    }
    
    
    public void close()
    {
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setIconImages(null);
        setLocationByPlatform(true);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/Screenshot (153).png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 11, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_versions_20px.png"))); // NOI18N
        jLabel12.setText("v1.0");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 489, -1, -1));

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_copyright_20px_1.png"))); // NOI18N
        jLabel23.setText("Ioannis Bakomichalis 2020");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 489, 173, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel3MouseExited(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_logout_rounded_left_50px.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 49, 46));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Logout");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
        });
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 50, 23));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 70, 90));

        jComboBox1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Surname", "Address", "City", "PostalCode", "Country" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 130, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_search_50px_2.png"))); // NOI18N
        jLabel5.setText("Search by");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 160, 50));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Attack Probability");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 190, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, -3, 630, 520));

        jPanel2.setBackground(new java.awt.Color(20, 20, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/logo_size_invert.jpg"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_exit_30px_2.png"))); // NOI18N
        jLabel6.setText("Exit");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel6MouseExited(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/privacysecurity/images/icons8_user_30px_1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(274, 274, 274)
                .addComponent(jLabel6)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        int a = JOptionPane.showConfirmDialog(this,"Do you want to close the IB App?","Exit",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE );
       if (a == JOptionPane.YES_OPTION)
       {
           System.exit(0);
       }
       else
       {
           
       }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
         mousepX = evt.getX();
         mousepY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
       int aX = evt.getXOnScreen();
        int aY = evt.getYOnScreen();
        
        this.setLocation(aX-mousepX,aY-mousepY);
    }//GEN-LAST:event_formMouseDragged

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
          jLabel6.setForeground(new java.awt.Color(42, 60, 76));
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseExited
          jLabel6.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_jLabel6MouseExited

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
          int a = JOptionPane.showConfirmDialog(this,"Do you want to Exit from your account?","Logout",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
       if (a==JOptionPane.YES_OPTION)
       {
          close();
          LoginPage b = new LoginPage();
          b.setVisible(true);
       }
       else
       {
           
       }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseEntered
       jPanel3.setBackground(new java.awt.Color(42, 60, 76));
    }//GEN-LAST:event_jPanel3MouseEntered

    private void jPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseExited
        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_jPanel3MouseExited

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
         jLabel4.setForeground(new java.awt.Color(42, 60, 76));
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
          int a = JOptionPane.showConfirmDialog(this,"Do you want to Exit from your account?","Logout",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
       if (a==JOptionPane.YES_OPTION)
       {
          close();
          LoginPage b = new LoginPage();
          b.setVisible(true);
       }
       else
       {
           
       }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
     try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
         pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
         
         if(rs.next())
         {
             int sum = rs.getInt("count(customerid)");
             
        
            
             
         }
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
     
    
     
     
     
     
     if(jComboBox1.getSelectedItem().equals("Name"))
     {   
        
         try {
             
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
         
        
         String Username =LoginPage.txtuser.getText();
         
           
           pst=con.prepareStatement("select count(customerid) from customers");
          rs=pst.executeQuery(); 
           pst1=con.prepareStatement("select customerName from customers where username=?");
          pst1.setString(1, Username);
          rs1=pst1.executeQuery();
         
         
           
                     
            if (rs.next() && rs1.next())
            {
              String cm = rs1.getString("customerName");
             pst1_2=con.prepareStatement("select count(customerName) from customers where customerName=?");
             pst1_2.setString(1, cm );
             rs1_2=pst1_2.executeQuery();
             System.out.println(cm);
             
             if (rs1_2.next())
             {
             float sum = rs.getInt("count(customerid)");  
             float sumname = rs1_2.getInt("count(customerName)");
            float name =((sum - sumname)/sum) * 100;
            
             String b = "The probability of attack on Name is: "  +name +"%" ; 
             String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same Name are: " +sumname ; 
             String e = "The name is: " + cm ;
             String metric;
             
             if (name>=0 && name<33 )
             {
                 metric="The risk is " +name+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(name>=33 && name<66)
             {
                
                  metric="The risk is " +name+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +name +". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
             
             
             
             
             
             //System.out.println("The probability is :" +sum);
              //System.out.println("The probability is :" +sumname);
              // System.out.println("The probability is: " +name+"%");
            
             
             }
             
              
             
            
            }
          
           
           
           
           
          
            
            
            
           
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
         
      
          
         
         
         
     }
     else if (jComboBox1.getSelectedItem().equals("Address"))
     {
       try {
            
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
         
         
         String Username =LoginPage.txtuser.getText();
         pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
         pst2=con.prepareStatement("select address from customers where username=? ");
         pst2.setString(1, Username);
         rs2=pst2.executeQuery();
         
         
         
         
         if(rs.next()&& rs2.next())
         { 
            String am = rs2.getString("address");
            pst2_2 = con.prepareStatement("select count(address) from customers where address=?");
            pst2_2.setString(1, am);
            rs2_2=pst2_2.executeQuery();
            System.out.println(am);
            
             
             if(rs2_2.next())
             {
             float sum = rs.getInt("count(customerid)");
             float sumadd = rs2_2.getInt("count(address)");
              float add = ((sum - sumadd)/sum) * 100;
              String b = "The probability of attack on Address is: "   +add +"%";
             System.out.println("The probability is :" +add +"%");
             String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same Address are: " +sumadd ; 
             String e = "The Address is: " + am ;
              
             String metric;
             
             if (add>=0 && add<33 )
             {
                 metric="The risk is " +add+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(add>=33 && add<66)
             {
                
                  metric="The risk is " +add+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +add +". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
             
             
             
             
             
             
    
             
             } 
         }
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     
     else if (jComboBox1.getSelectedItem().equals("City"))
     {
          String Username =LoginPage.txtuser.getText();
          try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
         pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
         pst3=con.prepareStatement("select city from customers where username=?");
         pst3.setString(1, Username);
         rs3=pst3.executeQuery();
         
         
         
         if(rs3.next() && rs.next())
         {
             String bm = rs3.getString("city");
             pst3_2=con.prepareStatement("select count(city) from customers where city=?");
             pst3_2.setString(1, bm);
             rs3_2=pst3_2.executeQuery();
             System.out.println(bm);
             
            if(rs3_2.next())
            {
             float sum = rs.getInt("count(customerid)");
             float sumcity = rs3_2.getInt("count(city)");
             float city = ((sum - sumcity)/sum) * 100;
             System.out.println("The probability is :" +city +"%");
             String b = "The probability of attack on City is: "  +city +"%";
             String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same City are: " +sumcity ; 
             String e = "The City is: " +bm ;
             
             
             String metric;
             
             if (city>=0 && city<33 )
             {
                 metric="The risk is " +city+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(city>=33 && city<66)
             {
                
                  metric="The risk is " +city+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +city+". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
            }
           
             
             
             
         }
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } 
     }
     
      else if (jComboBox1.getSelectedItem().equals("PostalCode"))
     {
         
         String Username =LoginPage.txtuser.getText();
           try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
        
          pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
          pst4=con.prepareStatement("select postalCode from customers where username=? ");
          pst4.setString(1, Username);
         rs4=pst4.executeQuery();
     
         
         
         if(rs4.next() && rs.next())
         {
             String dm = rs4.getString("postalCode");
             pst4_2=con.prepareStatement("select count(postalCode) from customers where postalCode=?");
             pst4_2.setString(1, dm);
             rs4_2=pst4_2.executeQuery();
             System.out.println(dm);
             
             if(rs4_2.next())
             {
             float sum = rs.getInt("count(customerid)");
             float sumpc = rs4_2.getInt("count(postalCode)");
              float pc = ((sum - sumpc)/sum) * 100;
             System.out.println("The probability is :" +pc +"%");
             String b = "The probability of attack on  PostalCode is: "  + pc +"%";
              String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same PostalCode are: " +sumpc ; 
             String e = "The PostalCode is: " +dm ;
             
             String metric;
             
             if (pc>=0 && pc<33 )
             {
                 metric="The risk is " +pc+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(pc>=33 && pc<66)
             {
                
                  metric="The risk is " +pc+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +pc+". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
            }
           
             
           
             
           
           
         }
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
      else if (jComboBox1.getSelectedItem().equals("Country"))
     {
          String Username =LoginPage.txtuser.getText();
           try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
        
         pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
          pst5=con.prepareStatement("select country from customers where username=? ");
          pst5.setString(1, Username);
          rs5=pst5.executeQuery();
          
         
         
         if(rs5.next() && rs.next())
         {
             String em = rs5.getString("country");
             pst5_2=con.prepareStatement("select count(country) from customers where country=?");
             pst5_2.setString(1, em);
             rs5_2=pst5_2.executeQuery();
             
             
             
            if(rs5_2.next())
            {
               
              float sum = rs.getInt("count(customerid)");
             float sumcountry = rs5_2.getInt("count(country)");
              float country = ((sum - sumcountry)/sum) * 100;
             System.out.println("The probability is :" +country +"%");
             String b = "The probability of attack on Country is: " + country +"%";
             String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same Country are: " +sumcountry ; 
             String e = "The Country is: " +em ;
             
             String metric;
             
             if (country>=0 && country<33 )
             {
                 metric="The risk is " +country+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(country>=33 && country<66)
             {
                
                  metric="The risk is " +country+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +country+". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
            
           
             
            
           
         }
         
         
         }   
         
         
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
         else if (jComboBox1.getSelectedItem().equals("Surname"))
     {
         
         String Username =LoginPage.txtuser.getText();
           try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         con=DriverManager.getConnection("jdbc:mysql://localhost/gdprv1.0","root","");
        
          pst=con.prepareStatement("select count(customerid) from customers");
         rs=pst.executeQuery();
          pst6=con.prepareStatement("select customerSurname from customers where username=? ");
          pst6.setString(1, Username);
         rs6=pst6.executeQuery();
     
         
         
         if(rs6.next() && rs.next())
         {
             String fm = rs6.getString("customerSurname");
             pst6_2=con.prepareStatement("select count(customerSurname) from customers where customerSurname=?");
             pst6_2.setString(1, fm);
             rs6_2=pst6_2.executeQuery();
             System.out.println(fm);
             
             if(rs6_2.next())
             {
             float sum = rs.getInt("count(customerid)");
             float sumsur = rs6_2.getInt("count(customerSurname)");
              float sur = ((sum - sumsur)/sum) * 100;
             System.out.println("The probability is :" +sur +"%");
             String b = "The probability of attack on  Surname is: "  + sur +"%";
              String c = "Users of the database are: " +sum ;
             String d = "The count of Users with the same Surname are: " +sumsur ; 
             String e = "The Surname is: " +fm ;
             
             String metric;
             
             if (sur>=0 && sur<33 )
             {
                 metric="The risk is " +sur+". " + "Releasing these data has a negligible privacy risk!" ;
                 JOptionPane.showMessageDialog(this, metric);
                 ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else if(sur>=33 && sur<66)
             {
                
                  metric="The risk is " +sur+". "  + "Releasing these data may result in a significant privacy risk!";
                   JOptionPane.showMessageDialog(this, metric);
                   ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
             }
             else
             {
                 metric= "The risk is " +sur+". " + "Releasing these data will result in high privacy risk!";
                  
                int risk = JOptionPane.showConfirmDialog(null,metric, "Are you sure you want to disclose your personala data?",JOptionPane.ERROR_MESSAGE,JOptionPane.YES_NO_OPTION);
                if (risk == JOptionPane.YES_OPTION)
                {
             ResultPage a =new ResultPage();
             a.setVisible(true);
             this.setVisible(true);
             this.setVisible(false);
             a.re(b);
             a.res(c);
             a.resu(d);
             a.resul(e);
             a.user(Username);
                }
                else
                {
                    
                }
             }
            
             
           }
             
           
           
         }
    
     } catch (ClassNotFoundException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(UserPage.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     else
     {
          
          
     }
        
     
     
     
     
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(new java.awt.Color(0, 0, 0));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
       jButton1.setBackground(new java.awt.Color(42, 60, 76));
    }//GEN-LAST:event_jButton1MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
           setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/privacysecurity/images/logo1.jpg")));
    }
}
